/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Completion, Completion$ } from "./completion";
import { HTTPMetadata, HTTPMetadata$ } from "./httpmetadata";
import * as z from "zod";

export type UpdateGlobals = {
    xLog10Organization: string;
};

export type UpdateRequest = {
    /**
     * The completion id to update.
     */
    completionId: string;
    xLog10Organization?: string | undefined;
    completion: Completion;
};

export type UpdateResponse = {
    httpMeta: HTTPMetadata;
    /**
     * OK
     */
    completion?: Completion | undefined;
};

/** @internal */
export namespace UpdateGlobals$ {
    export const inboundSchema: z.ZodType<UpdateGlobals, z.ZodTypeDef, unknown> = z
        .object({
            "X-Log10-Organization": z.string(),
        })
        .transform((v) => {
            return {
                xLog10Organization: v["X-Log10-Organization"],
            };
        });

    export type Outbound = {
        "X-Log10-Organization": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateGlobals> = z
        .object({
            xLog10Organization: z.string(),
        })
        .transform((v) => {
            return {
                "X-Log10-Organization": v.xLog10Organization,
            };
        });
}

/** @internal */
export namespace UpdateRequest$ {
    export const inboundSchema: z.ZodType<UpdateRequest, z.ZodTypeDef, unknown> = z
        .object({
            completionId: z.string(),
            "X-Log10-Organization": z.string().optional(),
            Completion: Completion$.inboundSchema,
        })
        .transform((v) => {
            return {
                completionId: v.completionId,
                ...(v["X-Log10-Organization"] === undefined
                    ? null
                    : { xLog10Organization: v["X-Log10-Organization"] }),
                completion: v.Completion,
            };
        });

    export type Outbound = {
        completionId: string;
        "X-Log10-Organization"?: string | undefined;
        Completion: Completion$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRequest> = z
        .object({
            completionId: z.string(),
            xLog10Organization: z.string().optional(),
            completion: Completion$.outboundSchema,
        })
        .transform((v) => {
            return {
                completionId: v.completionId,
                ...(v.xLog10Organization === undefined
                    ? null
                    : { "X-Log10-Organization": v.xLog10Organization }),
                Completion: v.completion,
            };
        });
}

/** @internal */
export namespace UpdateResponse$ {
    export const inboundSchema: z.ZodType<UpdateResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: HTTPMetadata$.inboundSchema,
            Completion: Completion$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Completion === undefined ? null : { completion: v.Completion }),
            };
        });

    export type Outbound = {
        HttpMeta: HTTPMetadata$.Outbound;
        Completion?: Completion$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateResponse> = z
        .object({
            httpMeta: HTTPMetadata$.outboundSchema,
            completion: Completion$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.completion === undefined ? null : { Completion: v.completion }),
            };
        });
}
