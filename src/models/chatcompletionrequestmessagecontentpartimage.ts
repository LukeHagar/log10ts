/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of the content part.
 */
export enum ChatCompletionRequestMessageContentPartImageType {
    ImageUrl = "image_url",
}

/**
 * Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
 */
export enum Detail {
    Auto = "auto",
    Low = "low",
    High = "high",
}

export type ImageUrl = {
    /**
     * Either a URL of the image or the base64 encoded image data.
     */
    url: string;
    /**
     * Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
     */
    detail?: Detail | undefined;
};

export type ChatCompletionRequestMessageContentPartImage = {
    /**
     * The type of the content part.
     */
    type: ChatCompletionRequestMessageContentPartImageType;
    imageUrl: ImageUrl;
};

/** @internal */
export namespace ChatCompletionRequestMessageContentPartImageType$ {
    export const inboundSchema = z.nativeEnum(ChatCompletionRequestMessageContentPartImageType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Detail$ {
    export const inboundSchema = z.nativeEnum(Detail);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace ImageUrl$ {
    export const inboundSchema: z.ZodType<ImageUrl, z.ZodTypeDef, unknown> = z
        .object({
            url: z.string(),
            detail: Detail$.inboundSchema.default(Detail.Auto),
        })
        .transform((v) => {
            return {
                url: v.url,
                detail: v.detail,
            };
        });

    export type Outbound = {
        url: string;
        detail: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ImageUrl> = z
        .object({
            url: z.string(),
            detail: Detail$.outboundSchema.default(Detail.Auto),
        })
        .transform((v) => {
            return {
                url: v.url,
                detail: v.detail,
            };
        });
}

/** @internal */
export namespace ChatCompletionRequestMessageContentPartImage$ {
    export const inboundSchema: z.ZodType<
        ChatCompletionRequestMessageContentPartImage,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            type: ChatCompletionRequestMessageContentPartImageType$.inboundSchema,
            image_url: z.lazy(() => ImageUrl$.inboundSchema),
        })
        .transform((v) => {
            return {
                type: v.type,
                imageUrl: v.image_url,
            };
        });

    export type Outbound = {
        type: string;
        image_url: ImageUrl$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ChatCompletionRequestMessageContentPartImage
    > = z
        .object({
            type: ChatCompletionRequestMessageContentPartImageType$.outboundSchema,
            imageUrl: z.lazy(() => ImageUrl$.outboundSchema),
        })
        .transform((v) => {
            return {
                type: v.type,
                image_url: v.imageUrl,
            };
        });
}
