/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateFeedbackTaskResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    task?: components.Task | undefined;
};

/** @internal */
export namespace CreateFeedbackTaskResponse$ {
    export const inboundSchema: z.ZodType<CreateFeedbackTaskResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Task: components.Task$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Task === undefined ? null : { task: v.Task }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Task?: components.Task$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateFeedbackTaskResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            task: components.Task$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.task === undefined ? null : { Task: v.task }),
            };
        });
}
